fisher.test(as.matrix(test2[c(6:7),c(5,6)]))$estimate)
)
FEsubDEG
library(VennDiagram)
tmp <- synRes[synRes$sampleA=="Kale" & synRes$sampleB=="TO1000",]
tmp$direction <- ifelse(tmp$log2FC > 0 & tmp$padj < 0.05,1,ifelse(tmp$log2FC < 0 & tmp$padj < 0.05,-1,0))
tmp2 <- tmp[tmp$direction != 0,]$At_gene
tmp2 <- as.vector(unique(tmp[tmp$direction != 0,]$At_gene))
tmp3 <- tmp[tmp$At_gene %in% tmp2,]
tmp4 <- tmp[,c(10,9,11)]
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$subgenome))
tmp5$sum <- rowSums(tmp5)
tmp6 <- as.vector(row.names(tmp5[tmp5$sum != tmp5$LF & tmp5$sum != tmp5$MF1 & tmp5$sum != tmp5$MF2,]))
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$direction))
tmp5 <- tmp5[row.names(tmp5) %in% as.vector(unique(tmp$At_gene)),]
#tmp5 <- tmp5[row.names(tmp5) %in% tmp2,]
tmp5$sum <- rowSums(tmp5)
tmp7 <- tmp5[tmp5$sum > 1 & row.names(tmp5) %in% tmp6,]
tmp6 <- row.names(tmp5[tmp5$`1` > 0 & tmp5$`-1` > 0,])
Bidirectional <- tmp[tmp$At_gene %in% tmp6,]
tmp6 <- row.names(tmp5[tmp5$sum == 1 & tmp5$`1` > 0,])
single_up <- tmp[tmp$At_gene %in% tmp6,]
tmp6 <- row.names(tmp5[tmp5$sum == 1 & tmp5$`-1` > 0,])
single_down <- tmp[tmp$At_gene %in% tmp6,]
tmp6 <- row.names(tmp5[tmp5$sum == 1,])
single_copy <- tmp[tmp$At_gene %in% tmp6,]
draw.triple.venn(area1=nrow(tmp7[tmp7$`-1`> 0,]),
area2=nrow(tmp7[tmp7$`1`> 0,]),
area3=nrow(tmp7[tmp7$`0`> 0,]),
n12=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0,]),
n23=nrow(tmp7[tmp7$`1`> 0 & tmp7$`0`> 0,]),
n13=nrow(tmp7[tmp7$`0`> 0 & tmp7$`-1`> 0,]),
n123=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0 & tmp7$`0`> 0,]),
category = c("Lower Expression", "Higher Expression", "No Difference"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid")
)
head(tmp3)
head(tmp4)
head(tmp5)
row.names(tmp5[tmp5$sum != tmp5$LF & tmp5$sum != tmp5$MF1 & tmp5$sum != tmp5$MF2,])
head(tmp6)
tmp6
head(tmp6)
tmp5
tmp5$LF
tmp5$LF
head(tmp5)
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$subgenome))
head(tmp5)
table(tmp5)
colSums(tmp5)
tmp7 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$direction))
tmp7 <- tmp7[row.names(tmp5) %in% as.vector(unique(tmp$At_gene)),]
#tmp5 <- tmp5[row.names(tmp5) %in% tmp2,]
tmp7$sum <- rowSums(tmp7)
head(tmp7)
head tmp5
head(tmp5)
nrow(tmp5[tmp5$LF>0 & tmp5$MF1>0 & tmp5$MF2>0,])
tmp7[row.names(tmp7) %in% row.names(tmp5[tmp5$LF>0 & tmp5$MF1>0 & tmp5$MF2>0,]),]
tmp8 <- tmp7[row.names(tmp7) %in% row.names(tmp5[tmp5$LF>0 & tmp5$MF1>0 & tmp5$MF2>0,]),]
table(tmp8[1:3])
ls
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`<1 & tmp8$`1`>1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`<1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`>1 & tmp8$`1`>1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`<1 & tmp8$`1`<1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`>1 & tmp8$`1`<1,])
Bidirectional
nrow(Bidirectional)
nrow(tmp8[tmp8$`-1`>1 & tmp8$`0`>1 & tmp8$`1`>1,])
nrow(tmp8[tmp8$`-1`>0 & tmp8$`0`>0 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>0 & tmp8$`0`<1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>0 & tmp8$`0`>1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>1 & tmp8$`0`>1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>1 & tmp8$`0`>1 & tmp8$`1`<1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`>0 & tmp8$`1`>0,])
tmp8[tmp8$`-1`<1 & tmp8$`0`>0 & tmp8$`1`>0,]
library(scales)
library(flextable)
p.adjust(method="BH")
FEsubDEG <- data.frame(
row.names=c("KvT","KvC","CvT"),
LF_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$p.value),
LF_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$estimate),
MF1_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$p.value),
MF1_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$estimate),
MF2_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$p.value),
MF2_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$estimate)
)
FEsubDEG
FEsubDEG <- data.frame(
row.names=c("Kale vs TO1000 LF","Kale vs TO1000 MF1","Kale vs TO1000 MF2",
"Kale vs Cabbage LF","Kale vs Cabbage MF1","Kale vs Cabbage MF2",
"Cabbage vs TO1000 LF","Cabbage vs TO1000 MF1","Cabbage vs TO1000 MF2"),
pvalue=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$p.value),
OR=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$estimate)
)
FEsubDEG
FEsubDEG$p.adjust <- p.adjust(FEsubDEG$pvalue,method="BH")
FEsubDEG
FEsubDEG <- data.frame(
row.names=c("Kale vs TO1000 LF","Kale vs TO1000 MF1","Kale vs TO1000 MF2",
"Kale vs Cabbage LF","Kale vs Cabbage MF1","Kale vs Cabbage MF2",
"Cabbage vs TO1000 LF","Cabbage vs TO1000 MF1","Cabbage vs TO1000 MF2"),
OR=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$estimate),
pvalue=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$p.value)
)
FEsubDEG$p.adjust <- p.adjust(FEsubDEG$pvalue,method="BH")
FEsubDEG
FEsubDEG
save.image("~/Analysis/Boleracea-rnaseq/figures_tables/Analysis.RData")
ls()
library(V.PhyloMaker)
detach(V.PhyloMaker)
detach(package="V.PhyloMaker")
detach(name="V.PhyloMaker")
detach(name=V.PhyloMaker)
detach("package:V.PhyloMaker", unload = TRUE)
detach("package:ape", unload = TRUE)
load("~/Analysis/Boleracea-rnaseq/figures_tables/Analysis.RData")
library(ggplot2)
nrow(Kshared)
setwd("computing/gene-duplication-and-methylation/scripts/analyses_R")
species = c("Aduranensis","Aipaensis","Alyrata","Athaliana","Atrichopoda",
"Bdistachyon","Boleracea","Brapa","Bvulgaris","Cclementina","Cpapaya",
"Clanatus","Cmelo","Crubella","Csativus","Egrandis","Eguineensis",
"Esalsugineum","Fvesca","Fxananassa","Gmax","Graimondii","Ljaponicus",
"Macuminata","Mdomestica","Mesculenta","Mguttatus","Mtruncatula","Osativa",
"Phallii","Ppersica","Ptrichocarpa","Pvirgatum","Pvulgaris","Pxbretschneideri",
"Sbicolor","Sitalica","Slycopersicum","Stuberosum","Sviridis","Tcacao",
"Vvinifera","Zmays")
FE <- data.frame()
for(a in species){
df1 <- read.csv(paste("../../figures_tables/SGDs/",a,"_KaKs_values.csv",sep=""),header=T)
df2 <- data.frame(table(df1[df1$Ka.Ks > 1 & df1$P.Value < 0.05,]$Duplication),table(df1$Duplication))[c(1,2,4)]
colnames(df2) <- c("Duplication","Positive.Selection","Total")
df2 <- rbind(df2,data.frame(Duplication=c("Total"),Positive.Selection=sum(df2$Positive.Selection),
Total=sum(df2$Total)))
df2$Percent <- df2$Positive.Selection/df2$Total
df3 <- data.frame(table(df1[df1$Ka.Ks > 1.1,]$Classification),table(df1$Classification))[c(1,2,4)]
colnames(df3) <- c("Classification","Positive.Selection","Total")
df3 <- rbind(df3,data.frame(Classification=c("Total"),Positive.Selection=sum(df3$Positive.Selection),
Total=sum(df3$Total)))
df3$Percent <- df3$Positive.Selection/df3$Total
df3 <- df3[c(1,2,4,5),]
df3$order <- c(2,3,4,1)
p <- ggplot(df3) +
geom_bar(aes(y=Percent,x=reorder(Classification,order),
fill=Classification),stat="identity") +
scale_y_continuous("Percent genes Ka/Ks > 1.1",labels=percent,expand=c(0,0)) +
theme_bw() +
theme(axis.text=element_text(color="black"),text=element_text(size=12),
axis.ticks=element_line(color="black"),
legend.position="None") + xlab("") +
scale_fill_manual(values=c("Total"="black","gbM"="#56B4E9",
"TE-like"="#E69F00","Unmethylated"="#CC79A7"))
ggsave(paste("../../figures_tables/SGDs/",a,"_positive_selection.pdf",sep=""),p,device="pdf")
for(i in 1:3){
FE <- rbind(FE,data.frame(species=c(a),classification=df3[i,1],
estimate=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df5[i,3]),
nrow=2,ncol=2),alternative="two.sided")$estimate,
p.value=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$p.value))
}
}
FE$p.adjust <- p.adjust(FE$p.value,method="BH")
library(ggplot2)
for(a in species){
df1 <- read.csv(paste("../../figures_tables/SGDs/",a,"_KaKs_values.csv",sep=""),header=T)
df2 <- data.frame(table(df1[df1$Ka.Ks > 1 & df1$P.Value < 0.05,]$Duplication),table(df1$Duplication))[c(1,2,4)]
colnames(df2) <- c("Duplication","Positive.Selection","Total")
df2 <- rbind(df2,data.frame(Duplication=c("Total"),Positive.Selection=sum(df2$Positive.Selection),
Total=sum(df2$Total)))
df2$Percent <- df2$Positive.Selection/df2$Total
df3 <- data.frame(table(df1[df1$Ka.Ks > 1.1,]$Classification),table(df1$Classification))[c(1,2,4)]
colnames(df3) <- c("Classification","Positive.Selection","Total")
df3 <- rbind(df3,data.frame(Classification=c("Total"),Positive.Selection=sum(df3$Positive.Selection),
Total=sum(df3$Total)))
df3$Percent <- df3$Positive.Selection/df3$Total
df3 <- df3[c(1,2,4,5),]
df3$order <- c(2,3,4,1)
p <- ggplot(df3) +
geom_bar(aes(y=Percent,x=reorder(Classification,order),
fill=Classification),stat="identity") +
scale_y_continuous("Percent genes Ka/Ks > 1.1",labels=percent,expand=c(0,0)) +
theme_bw() +
theme(axis.text=element_text(color="black"),text=element_text(size=12),
axis.ticks=element_line(color="black"),
legend.position="None") + xlab("") +
scale_fill_manual(values=c("Total"="black","gbM"="#56B4E9",
"TE-like"="#E69F00","Unmethylated"="#CC79A7"))
ggsave(paste("../../figures_tables/SGDs/",a,"_positive_selection.pdf",sep=""),p,device="pdf")
for(i in 1:3){
FE <- rbind(FE,data.frame(species=c(a),classification=df3[i,1],
estimate=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df5[i,3]),
nrow=2,ncol=2),alternative="two.sided")$estimate,
p.value=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$p.value))
}
}
library(reshape2)
library(scales)
for(a in species){
df1 <- read.csv(paste("../../figures_tables/SGDs/",a,"_KaKs_values.csv",sep=""),header=T)
df2 <- data.frame(table(df1[df1$Ka.Ks > 1 & df1$P.Value < 0.05,]$Duplication),table(df1$Duplication))[c(1,2,4)]
colnames(df2) <- c("Duplication","Positive.Selection","Total")
df2 <- rbind(df2,data.frame(Duplication=c("Total"),Positive.Selection=sum(df2$Positive.Selection),
Total=sum(df2$Total)))
df2$Percent <- df2$Positive.Selection/df2$Total
df3 <- data.frame(table(df1[df1$Ka.Ks > 1.1,]$Classification),table(df1$Classification))[c(1,2,4)]
colnames(df3) <- c("Classification","Positive.Selection","Total")
df3 <- rbind(df3,data.frame(Classification=c("Total"),Positive.Selection=sum(df3$Positive.Selection),
Total=sum(df3$Total)))
df3$Percent <- df3$Positive.Selection/df3$Total
df3 <- df3[c(1,2,4,5),]
df3$order <- c(2,3,4,1)
p <- ggplot(df3) +
geom_bar(aes(y=Percent,x=reorder(Classification,order),
fill=Classification),stat="identity") +
scale_y_continuous("Percent genes Ka/Ks > 1.1",labels=percent,expand=c(0,0)) +
theme_bw() +
theme(axis.text=element_text(color="black"),text=element_text(size=12),
axis.ticks=element_line(color="black"),
legend.position="None") + xlab("") +
scale_fill_manual(values=c("Total"="black","gbM"="#56B4E9",
"TE-like"="#E69F00","Unmethylated"="#CC79A7"))
ggsave(paste("../../figures_tables/SGDs/",a,"_positive_selection.pdf",sep=""),p,device="pdf")
for(i in 1:3){
FE <- rbind(FE,data.frame(species=c(a),classification=df3[i,1],
estimate=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df5[i,3]),
nrow=2,ncol=2),alternative="two.sided")$estimate,
p.value=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$p.value))
}
}
species = c("Aduranensis","Aipaensis","Alyrata","Athaliana","Atrichopoda",
"Bdistachyon","Boleracea","Brapa","Bvulgaris","Cclementina","Cpapaya",
"Clanatus","Cmelo","Crubella","Csativus","Egrandis","Eguineensis",
"Esalsugineum","Fvesca","Fxananassa","Gmax","Graimondii","Ljaponicus",
"Macuminata","Mdomestica","Mesculenta","Mguttatus","Mtruncatula","Osativa",
"Phallii","Ppersica","Ptrichocarpa","Pvirgatum","Pvulgaris","Pxbretschneideri",
"Sbicolor","Sitalica","Slycopersicum","Stuberosum","Sviridis","Tcacao",
"Vvinifera","Zmays")
FE <- data.frame()
for(a in species){
df1 <- read.csv(paste("../../figures_tables/SGDs/",a,"_KaKs_values.csv",sep=""),header=T)
df2 <- data.frame(table(df1[df1$Ka.Ks > 1 & df1$P.Value < 0.05,]$Duplication),table(df1$Duplication))[c(1,2,4)]
colnames(df2) <- c("Duplication","Positive.Selection","Total")
df2 <- rbind(df2,data.frame(Duplication=c("Total"),Positive.Selection=sum(df2$Positive.Selection),
Total=sum(df2$Total)))
df2$Percent <- df2$Positive.Selection/df2$Total
df3 <- data.frame(table(df1[df1$Ka.Ks > 1.1,]$Classification),table(df1$Classification))[c(1,2,4)]
colnames(df3) <- c("Classification","Positive.Selection","Total")
df3 <- rbind(df3,data.frame(Classification=c("Total"),Positive.Selection=sum(df3$Positive.Selection),
Total=sum(df3$Total)))
df3$Percent <- df3$Positive.Selection/df3$Total
df3 <- df3[c(1,2,4,5),]
df3$order <- c(2,3,4,1)
p <- ggplot(df3) +
geom_bar(aes(y=Percent,x=reorder(Classification,order),
fill=Classification),stat="identity") +
scale_y_continuous("Percent genes Ka/Ks > 1.1",labels=percent,expand=c(0,0)) +
theme_bw() +
theme(axis.text=element_text(color="black"),text=element_text(size=12),
axis.ticks=element_line(color="black"),
legend.position="None") + xlab("") +
scale_fill_manual(values=c("Total"="black","gbM"="#56B4E9",
"TE-like"="#E69F00","Unmethylated"="#CC79A7"))
ggsave(paste("../../figures_tables/SGDs/",a,"_positive_selection.pdf",sep=""),p,device="pdf")
for(i in 1:3){
FE <- rbind(FE,data.frame(species=c(a),classification=df3[i,1],
estimate=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df5[i,3]),
nrow=2,ncol=2),alternative="two.sided")$estimate,
p.value=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$p.value))
}
}
FE <- data.frame()
for(a in species){
df1 <- read.csv(paste("../../figures_tables/SGDs/",a,"_KaKs_values.csv",sep=""),header=T)
df2 <- data.frame(table(df1[df1$Ka.Ks > 1 & df1$P.Value < 0.05,]$Duplication),table(df1$Duplication))[c(1,2,4)]
colnames(df2) <- c("Duplication","Positive.Selection","Total")
df2 <- rbind(df2,data.frame(Duplication=c("Total"),Positive.Selection=sum(df2$Positive.Selection),
Total=sum(df2$Total)))
df2$Percent <- df2$Positive.Selection/df2$Total
df3 <- data.frame(table(df1[df1$Ka.Ks > 1.1,]$Classification),table(df1$Classification))[c(1,2,4)]
colnames(df3) <- c("Classification","Positive.Selection","Total")
df3 <- rbind(df3,data.frame(Classification=c("Total"),Positive.Selection=sum(df3$Positive.Selection),
Total=sum(df3$Total)))
df3$Percent <- df3$Positive.Selection/df3$Total
df3 <- df3[c(1,2,4,5),]
df3$order <- c(2,3,4,1)
p <- ggplot(df3) +
geom_bar(aes(y=Percent,x=reorder(Classification,order),
fill=Classification),stat="identity") +
scale_y_continuous("Percent genes Ka/Ks > 1.1",labels=percent,expand=c(0,0)) +
theme_bw() +
theme(axis.text=element_text(color="black"),text=element_text(size=12),
axis.ticks=element_line(color="black"),
legend.position="None") + xlab("") +
scale_fill_manual(values=c("Total"="black","gbM"="#56B4E9",
"TE-like"="#E69F00","Unmethylated"="#CC79A7"))
ggsave(paste("../../figures_tables/SGDs/",a,"_positive_selection.pdf",sep=""),p,device="pdf")
for(i in 1:3){
FE <- rbind(FE,data.frame(species=c(a),classification=df3[i,1],
estimate=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$estimate,
p.value=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$p.value))
}
}
FE <- data.frame()
for(a in species){
df1 <- read.csv(paste("../../figures_tables/SGDs/",a,"_KaKs_values.csv",sep=""),header=T)
df2 <- data.frame(table(df1[df1$Ka.Ks > 1 & df1$P.Value < 0.05,]$Duplication),table(df1$Duplication))[c(1,2,4)]
colnames(df2) <- c("Duplication","Positive.Selection","Total")
df2 <- rbind(df2,data.frame(Duplication=c("Total"),Positive.Selection=sum(df2$Positive.Selection),
Total=sum(df2$Total)))
df2$Percent <- df2$Positive.Selection/df2$Total
df3 <- data.frame(table(df1[df1$Ka.Ks > 1.1,]$Classification),table(df1$Classification))[c(1,2,4)]
colnames(df3) <- c("Classification","Positive.Selection","Total")
df3 <- rbind(df3,data.frame(Classification=c("Total"),Positive.Selection=sum(df3$Positive.Selection),
Total=sum(df3$Total)))
df3$Percent <- df3$Positive.Selection/df3$Total
df3 <- df3[c(1,2,4,5),]
df3$order <- c(2,3,4,1)
p <- ggplot(df3) +
geom_bar(aes(y=Percent,x=reorder(Classification,order),
fill=Classification),stat="identity") +
scale_y_continuous("Percent genes Ka/Ks > 1.1",labels=percent,expand=c(0,0)) +
theme_bw() +
theme(axis.text=element_text(color="black"),text=element_text(size=12),
axis.ticks=element_line(color="black"),
legend.position="None") + xlab("") +
scale_fill_manual(values=c("Total"="black","gbM"="#56B4E9",
"TE-like"="#E69F00","Unmethylated"="#CC79A7"))
ggsave(paste("../../figures_tables/SGDs/",a,"_positive_selection.pdf",sep=""),p,device="pdf",width=5,length=5)
for(i in 1:3){
FE <- rbind(FE,data.frame(species=c(a),classification=df3[i,1],
estimate=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$estimate,
p.value=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$p.value))
}
}
FE <- data.frame()
for(a in species){
df1 <- read.csv(paste("../../figures_tables/SGDs/",a,"_KaKs_values.csv",sep=""),header=T)
df2 <- data.frame(table(df1[df1$Ka.Ks > 1 & df1$P.Value < 0.05,]$Duplication),table(df1$Duplication))[c(1,2,4)]
colnames(df2) <- c("Duplication","Positive.Selection","Total")
df2 <- rbind(df2,data.frame(Duplication=c("Total"),Positive.Selection=sum(df2$Positive.Selection),
Total=sum(df2$Total)))
df2$Percent <- df2$Positive.Selection/df2$Total
df3 <- data.frame(table(df1[df1$Ka.Ks > 1.1,]$Classification),table(df1$Classification))[c(1,2,4)]
colnames(df3) <- c("Classification","Positive.Selection","Total")
df3 <- rbind(df3,data.frame(Classification=c("Total"),Positive.Selection=sum(df3$Positive.Selection),
Total=sum(df3$Total)))
df3$Percent <- df3$Positive.Selection/df3$Total
df3 <- df3[c(1,2,4,5),]
df3$order <- c(2,3,4,1)
p <- ggplot(df3) +
geom_bar(aes(y=Percent,x=reorder(Classification,order),
fill=Classification),stat="identity") +
scale_y_continuous("Percent genes Ka/Ks > 1.1",labels=percent,expand=c(0,0)) +
theme_bw() +
theme(axis.text=element_text(color="black"),text=element_text(size=12),
axis.ticks=element_line(color="black"),
legend.position="None") + xlab("") +
scale_fill_manual(values=c("Total"="black","gbM"="#56B4E9",
"TE-like"="#E69F00","Unmethylated"="#CC79A7"))
ggsave(paste("../../figures_tables/SGDs/",a,"_positive_selection.pdf",sep=""),p,device="pdf",width=5,height=5)
for(i in 1:3){
FE <- rbind(FE,data.frame(species=c(a),classification=df3[i,1],
estimate=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$estimate,
p.value=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$p.value))
}
}
for(a in species){
df1 <- read.csv(paste("../../figures_tables/SGDs/",a,"_KaKs_values.csv",sep=""),header=T)
df2 <- data.frame(table(df1[df1$Ka.Ks > 1 & df1$P.Value < 0.05,]$Duplication),table(df1$Duplication))[c(1,2,4)]
colnames(df2) <- c("Duplication","Positive.Selection","Total")
df2 <- rbind(df2,data.frame(Duplication=c("Total"),Positive.Selection=sum(df2$Positive.Selection),
Total=sum(df2$Total)))
df2$Percent <- df2$Positive.Selection/df2$Total
df3 <- data.frame(table(df1[df1$Ka.Ks > 1.1,]$Classification),table(df1$Classification))[c(1,2,4)]
colnames(df3) <- c("Classification","Positive.Selection","Total")
df3 <- rbind(df3,data.frame(Classification=c("Total"),Positive.Selection=sum(df3$Positive.Selection),
Total=sum(df3$Total)))
df3$Percent <- df3$Positive.Selection/df3$Total
df3 <- df3[c(1,2,4,5),]
df3$order <- c(2,3,4,1)
p <- ggplot(df3) +
geom_bar(aes(y=Percent,x=reorder(Classification,order),
fill=Classification),stat="identity") +
scale_y_continuous("Percent genes Ka/Ks > 1.1",labels=percent,expand=c(0,0)) +
theme_bw() +
theme(axis.text=element_text(color="black"),text=element_text(size=12),
axis.ticks=element_line(color="black"),
legend.position="None") + xlab("") +
scale_fill_manual(values=c("Total"="black","gbM"="#56B4E9",
"TE-like"="#E69F00","Unmethylated"="#CC79A7"))
ggsave(paste("../../figures_tables/SGDs/",a,"_positive_selection.pdf",sep=""),p,device="pdf",width=4,height=4)
for(i in 1:3){
FE <- rbind(FE,data.frame(species=c(a),classification=df3[i,1],
estimate=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$estimate,
p.value=fisher.test(matrix(c(df3[i,2],
df3[i,3]-df3[i,2],
df3[4,2]-df3[i,2],
df3[4,3]-df3[4,2]-df3[i,3]),
nrow=2,ncol=2),alternative="two.sided")$p.value))
}
}
