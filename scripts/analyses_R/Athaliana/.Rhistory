(59225-nrow(syn[syn$subgenome=="MF2",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF2",])),
nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
(59225-nrow(syn[syn$subgenome=="MF2",]))-(nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]))),
)
subDEG <- data.frame(row.names=c("Genome","KvT DEG","KvT Non-DEG","KvC DEG",
"KvC Non-DEG","CvT DEG","CvT Non-DEG"),
LF=c(nrow(syn[syn$subgenome=="LF",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
nrow(syn[syn$subgenome=="LF",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="LF",]),
nrow(syn[syn$subgenome=="LF",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="LF",]),
nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
nrow(syn[syn$subgenome=="LF",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",])),
nonLF=c(59225-nrow(syn[syn$subgenome=="LF",]),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
(59225-nrow(syn[syn$subgenome=="LF",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",])),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="LF",]),
(59225-nrow(syn[syn$subgenome=="LF",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="LF",])),
nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
(59225-nrow(syn[syn$subgenome=="LF",]))-(nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]))),
MF1=c(nrow(syn[syn$subgenome=="MF1",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
nrow(syn[syn$subgenome=="MF1",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF1",]),
nrow(syn[syn$subgenome=="MF1",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF1",]),
nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
nrow(syn[syn$subgenome=="MF1",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",])),
nonMF1=c(c(59225-nrow(syn[syn$subgenome=="MF1",]),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
(59225-nrow(syn[syn$subgenome=="MF1",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",])),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF1",]),
(59225-nrow(syn[syn$subgenome=="MF1",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF1",])),
nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
(59225-nrow(syn[syn$subgenome=="MF1",]))-(nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]))),
MF2=c(nrow(syn[syn$subgenome=="MF2",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
nrow(syn[syn$subgenome=="MF2",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF2",]),
nrow(syn[syn$subgenome=="MF2",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF2",]),
nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
nrow(syn[syn$subgenome=="MF2",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",])),
nonMF2=c(c(59225-nrow(syn[syn$subgenome=="MF2",]),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
(59225-nrow(syn[syn$subgenome=="MF2",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",])),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF2",]),
(59225-nrow(syn[syn$subgenome=="MF2",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF2",])),
nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
(59225-nrow(syn[syn$subgenome=="MF2",]))-(nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",])))
)
subDEG <- data.frame(row.names=c("Genome","KvT DEG","KvT Non-DEG","KvC DEG",
"KvC Non-DEG","CvT DEG","CvT Non-DEG"),
LF=c(nrow(syn[syn$subgenome=="LF",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
nrow(syn[syn$subgenome=="LF",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="LF",]),
nrow(syn[syn$subgenome=="LF",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="LF",]),
nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
nrow(syn[syn$subgenome=="LF",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",])),
nonLF=c(59225-nrow(syn[syn$subgenome=="LF",]),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
(59225-nrow(syn[syn$subgenome=="LF",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",])),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="LF",]),
(59225-nrow(syn[syn$subgenome=="LF",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="LF",])),
nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]),
(59225-nrow(syn[syn$subgenome=="LF",]))-(nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="LF",]))),
MF1=c(nrow(syn[syn$subgenome=="MF1",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
nrow(syn[syn$subgenome=="MF1",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF1",]),
nrow(syn[syn$subgenome=="MF1",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF1",]),
nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
nrow(syn[syn$subgenome=="MF1",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",])),
nonMF1=c(59225-nrow(syn[syn$subgenome=="MF1",]),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
(59225-nrow(syn[syn$subgenome=="MF1",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",])),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF1",]),
(59225-nrow(syn[syn$subgenome=="MF1",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF1",])),
nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]),
(59225-nrow(syn[syn$subgenome=="MF1",]))-(nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF1",]))),
MF2=c(nrow(syn[syn$subgenome=="MF2",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
nrow(syn[syn$subgenome=="MF2",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF2",]),
nrow(syn[syn$subgenome=="MF2",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF2",]),
nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
nrow(syn[syn$subgenome=="MF2",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",])),
nonMF2=c(59225-nrow(syn[syn$subgenome=="MF2",]),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
(59225-nrow(syn[syn$subgenome=="MF2",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",])),
nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF2",]),
(59225-nrow(syn[syn$subgenome=="MF2",]))-(nrow(sig[sig$sampleA=="Kale" & sig$sampleB=="Cabbage",])-nrow(synSig[synSig$sampleA=="Kale" & synSig$sampleB=="Cabbage" & synSig$subgenome=="MF2",])),
nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",]),
(59225-nrow(syn[syn$subgenome=="MF2",]))-(nrow(sig[sig$sampleA=="Cabbage" & sig$sampleB=="TO1000",])-nrow(synSig[synSig$sampleA=="Cabbage" & synSig$sampleB=="TO1000" & synSig$subgenome=="MF2",])))
)
subDEG
FEsubDEG <- data.frame(
row.names=c("KvT","KvC","CvT"),
LF_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))$p.value),
LF_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]))$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]))$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]))$estimate),
MF1_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))$p.value),
MF1_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]))$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]))$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]))$estimate),
MF2_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]))$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]))$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]))$p.value),
MF2_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]))$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]))$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]))$estimate)
)
FEsubDEG
library(VennDiagram)
tmp <- synRes[synRes$sampleA=="Kale" & synRes$sampleB=="TO1000",]
tmp$direction <- ifelse(tmp$log2FC > 0 & tmp$padj < 0.05,1,ifelse(tmp$log2FC < 0 & tmp$padj < 0.05,-1,0))
tmp2 <- tmp[tmp$direction != 0,]$At_gene
tmp2 <- as.vector(unique(tmp[tmp$direction != 0,]$At_gene))
tmp3 <- tmp[tmp$At_gene %in% tmp2,]
tmp4 <- tmp[,c(10,9,11)]
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$subgenome))
tmp5$sum <- rowSums(tmp5)
tmp6 <- as.vector(row.names(tmp5[tmp5$sum != tmp5$LF & tmp5$sum != tmp5$MF1 & tmp5$sum != tmp5$MF2,]))
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$direction))
tmp5 <- tmp5[row.names(tmp5) %in% as.vector(unique(tmp$At_gene)),]
#tmp5 <- tmp5[row.names(tmp5) %in% tmp2,]
tmp5$sum <- rowSums(tmp5)
tmp7 <- tmp5[tmp5$sum > 1 & row.names(tmp5) %in% tmp6,]
tmp6 <- row.names(tmp5[tmp5$`1` > 0 & tmp5$`-1` > 0,])
Bidirectional <- tmp[tmp$At_gene %in% tmp6,]
tmp6 <- row.names(tmp5[tmp5$sum == 1 & tmp5$`1` > 0,])
single_up <- tmp[tmp$At_gene %in% tmp6,]
tmp6 <- row.names(tmp5[tmp5$sum == 1 & tmp5$`-1` > 0,])
single_down <- tmp[tmp$At_gene %in% tmp6,]
tmp6 <- row.names(tmp5[tmp5$sum == 1,])
single_copy <- tmp[tmp$At_gene %in% tmp6,]
draw.triple.venn(area1=nrow(tmp7[tmp7$`-1`> 0,]),
area2=nrow(tmp7[tmp7$`1`> 0,]),
area3=nrow(tmp7[tmp7$`0`> 0,]),
n12=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0,]),
n23=nrow(tmp7[tmp7$`1`> 0 & tmp7$`0`> 0,]),
n13=nrow(tmp7[tmp7$`0`> 0 & tmp7$`-1`> 0,]),
n123=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0 & tmp7$`0`> 0,]),
category = c("Lower Expression", "Higher Expression", "No Difference"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid")
)
head(tmp3)
head(tmp4)
head(tmp5)
row.names(tmp5[tmp5$sum != tmp5$LF & tmp5$sum != tmp5$MF1 & tmp5$sum != tmp5$MF2,])
head(tmp6)
tmp6
head(tmp6)
tmp5
tmp5$LF
tmp5$LF
head(tmp5)
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$subgenome))
head(tmp5)
table(tmp5)
colSums(tmp5)
tmp7 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$direction))
tmp7 <- tmp7[row.names(tmp5) %in% as.vector(unique(tmp$At_gene)),]
#tmp5 <- tmp5[row.names(tmp5) %in% tmp2,]
tmp7$sum <- rowSums(tmp7)
head(tmp7)
head tmp5
head(tmp5)
nrow(tmp5[tmp5$LF>0 & tmp5$MF1>0 & tmp5$MF2>0,])
tmp7[row.names(tmp7) %in% row.names(tmp5[tmp5$LF>0 & tmp5$MF1>0 & tmp5$MF2>0,]),]
tmp8 <- tmp7[row.names(tmp7) %in% row.names(tmp5[tmp5$LF>0 & tmp5$MF1>0 & tmp5$MF2>0,]),]
table(tmp8[1:3])
ls
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`<1 & tmp8$`1`>1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`<1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`>1 & tmp8$`1`>1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`<1 & tmp8$`1`<1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`>1 & tmp8$`1`<1,])
Bidirectional
nrow(Bidirectional)
nrow(tmp8[tmp8$`-1`>1 & tmp8$`0`>1 & tmp8$`1`>1,])
nrow(tmp8[tmp8$`-1`>0 & tmp8$`0`>0 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>0 & tmp8$`0`<1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>0 & tmp8$`0`>1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>1 & tmp8$`0`>1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>1 & tmp8$`0`>1 & tmp8$`1`<1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`>0 & tmp8$`1`>0,])
tmp8[tmp8$`-1`<1 & tmp8$`0`>0 & tmp8$`1`>0,]
library(scales)
library(flextable)
p.adjust(method="BH")
FEsubDEG <- data.frame(
row.names=c("KvT","KvC","CvT"),
LF_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$p.value),
LF_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$estimate),
MF1_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$p.value),
MF1_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$estimate),
MF2_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$p.value),
MF2_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$estimate)
)
FEsubDEG
FEsubDEG <- data.frame(
row.names=c("Kale vs TO1000 LF","Kale vs TO1000 MF1","Kale vs TO1000 MF2",
"Kale vs Cabbage LF","Kale vs Cabbage MF1","Kale vs Cabbage MF2",
"Cabbage vs TO1000 LF","Cabbage vs TO1000 MF1","Cabbage vs TO1000 MF2"),
pvalue=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$p.value),
OR=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$estimate)
)
FEsubDEG
FEsubDEG$p.adjust <- p.adjust(FEsubDEG$pvalue,method="BH")
FEsubDEG
FEsubDEG <- data.frame(
row.names=c("Kale vs TO1000 LF","Kale vs TO1000 MF1","Kale vs TO1000 MF2",
"Kale vs Cabbage LF","Kale vs Cabbage MF1","Kale vs Cabbage MF2",
"Cabbage vs TO1000 LF","Cabbage vs TO1000 MF1","Cabbage vs TO1000 MF2"),
OR=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$estimate),
pvalue=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$p.value)
)
FEsubDEG$p.adjust <- p.adjust(FEsubDEG$pvalue,method="BH")
FEsubDEG
FEsubDEG
save.image("~/Analysis/Boleracea-rnaseq/figures_tables/Analysis.RData")
ls()
library(V.PhyloMaker)
detach(V.PhyloMaker)
detach(package="V.PhyloMaker")
detach(name="V.PhyloMaker")
detach(name=V.PhyloMaker)
detach("package:V.PhyloMaker", unload = TRUE)
detach("package:ape", unload = TRUE)
load("~/Analysis/Boleracea-rnaseq/figures_tables/Analysis.RData")
library(ggplot2)
nrow(Kshared)
setwd("projects/gene-duplication-and-methylation/scripts/analyses_R/Athaliana/")
df1 <- read.table("methylpy/results/Athaliana_classified_genes.tsv")
df1 <- read.table("methylpy/results/Athaliana_classified_genes.tsv",sep="\t",header=TRUE)
df2 <- read.table("ref/mcscanx/Athaliana_orthogroups.tsv",header=FALSE,sep="\t")
head(df2)
head(df1)
df3 <- merge(df2,df1[c(1,23)],by.x=V1,by.y="Feature")
df3 <- merge(df2,df1[c(1,23)],by.x="V1",by.y="Feature")
head(df)
head(df3)
table(df3[c(2,3)])
as.data.frame(table(df3[c(2,3)]))
table(df3[c(2,3)])
tmp <- table(df3[c(2,3)])
tmp
is(tmp)
as.matrix(table(df3[c(2,3)]))
tmp <- as.matrix(table(df3[c(2,3)]))
tmp
tmp[1]
tmp[0]
tmp[1,1]
tmp[2]
tmp[3]
tmp[4]
tmp
as.data.frame(tmp)
head(df3)
tmp[10]
tmp[50]
tmp[3]
tmp[110]
tmp[1]
tmp[0]
tmp[2]
tmp[[1]]
tmp[[2]]
tmp[[3]]
tmp[[4]]
head(tmp)
tmp["gbM"]
tmp[["gbM"]
]
tmp <- data.frame(table(df3[c(2,3)]))
tmp
data.frame(gbM=tmp[tmp$Classification=="gbM",]$Freq)
head(data.frame(gbM=tmp[tmp$Classification=="gbM",]$Freq))
data.frame(gbM=tmp[tmp$Classification=="gbM",]$Freq,TE-like=tmp[tmp$Classification=="TE-like",]$Freq,Unmethylated=tmp[tmp$Classification=="Unmethylated",]$Freq,Unclassified=tmp[tmp$Classification=="Unclassified",]$Freq)
data.frame(gbM=tmp[tmp$Classification=="gbM",]$Freq,TE-like=tmp[tmp$Classification=="TE-like",]$Freq,Unmethylated=tmp[tmp$Classification=="Unmethylated",]$Freq,Unclassified=tmp[tmp$Classification=="Unclassified",]$Freq)
tmp[tmp$Classification=="Unclassified",]$Freq
tmp[tmp$Classification=="Unclassified",]
tmp[tmp$Classification=="Unclassified","Freq"]
tmp[tmp$Classification=="Unclassified",c(1,3)]
table(df3[c(2,3)])
df4 <- data.frame(table(df3[c(2,3)]))
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,tmp[tmp$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unclassified",c(1,3)],by="V2")
head(df5)
df5 <- df5[c(2:5)]
colnames(df5) <- c("gbM","TE-like","Unmethylated","Unclassified")
df4 <- data.frame(table(df3[c(2,3)]))
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,tmp[tmp$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unclassified",c(1,3)],by="V2")
row.names(df5) <- df5$V2
df5 <- df5[c(2:5)]
colnames(df5) <- c("gbM","TE-like","Unmethylated","Unclassified")
head(df5)
df1
df1$Classification <- ifelse(is.na(df1$Classification),"Missing",df1$Classification)
df1
df1
df1 <- read.table("methylpy/results/Athaliana_classified_genes.tsv",sep="\t",header=TRUE)
df1
is.na(df1$Classification)
ifelse(row.names(df1) %in% is.na(df1$Classification),"Missing",df1$Classification)
ifelse(row.names(df1) %in% row.names(df1[is.na(df1$Classification),]),"Missing",df1$Classification)
ifelse(row.names(df1) %in% row.names(df1[is.na(df1$Classification),]),"Missing")
ifelse(row.names(df1) %in% row.names(df1[is.na(df1$Classification),]),"Missing",NA)
df1 <- read.table("methylpy/results/Athaliana_classified_genes.tsv",sep="\t",header=TRUE)
df1 <- read.table("methylpy/results/Athaliana_classified_genes.tsv",sep="\t",header=TRUE,is.na <- "Missing")
df1 <- read.table("methylpy/results/Athaliana_classified_genes.tsv",sep="\t",header=TRUE)
df1
df3
nrow(df3)
nrow(df1)
tail(df3)
table(df1$Classification)
tail(df3)
head(df1)
df1
df3[df3$V1=="AT2G07714",]
is.na(df3$Classification)
table(is.na(df3$Classification))
is(df3$Classification)
df1$Classification <- as.character()
df1$Classification <- as.character(df1$Classification)
df1
ifelse(is.na(df1$Classification),"Missing",df1$Classification)
df1$Classification <- ifelse(is.na(df1$Classification),"Missing",df1$Classification)
df1$Classification <- as.character(df1$Classification)
df1 <- read.table("methylpy/results/Athaliana_classified_genes.tsv",sep="\t",header=TRUE)
df1$Classification <- ifelse(is.na(df1$Classification),"Missing",df1$Classification)
df2 <- read.table("ref/mcscanx/Athaliana_orthogroups.tsv",header=FALSE,sep="\t")
df3 <- merge(df2,df1[c(1,23)],by.x=V1,by.y="Feature")
df4 <- data.frame(table(df3[c(2,3)]))
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,tmp[tmp$Classification=="TE-like",c(1,3)],by="V2")
df1$Classification <- as.character(df1$Classification)
df1 <- read.table("methylpy/results/Athaliana_classified_genes.tsv",sep="\t",header=TRUE)
df1$Classification <- ifelse(is.na(df1$Classification),"Missing",df1$Classification)
df2 <- read.table("ref/mcscanx/Athaliana_orthogroups.tsv",header=FALSE,sep="\t")
df3 <- merge(df2,df1[c(1,23)],by.x=V1,by.y="Feature")
df2
head(df2)
df2 <- read.table("ref/mcscanx/Athaliana_orthogroups.tsv",header=FALSE,sep="\t")
df3 <- merge(df2,df1[c(1,23)],by.x="V1",by.y="Feature")
df4 <- data.frame(table(df3[c(2,3)]))
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,tmp[tmp$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unclassified",c(1,3)],by="V2")
row.names(df5) <- df5$V2
df5 <- df5[c(2:5)]
colnames(df5) <- c("gbM","TE-like","Unmethylated","Unclassified")
head(df5)
head(df4)
table(df3[c(2,3)])
is(df3$Classification)
head(df3)
head(df1)
df1 <- read.table("methylpy/results/Athaliana_classified_genes.tsv",sep="\t",header=TRUE)
df1$Classification <- as.character(df1$Classification)
df1$Classification <- ifelse(is.na(df1$Classification),"Missing",df1$Classification)
df2 <- read.table("ref/mcscanx/Athaliana_orthogroups.tsv",header=FALSE,sep="\t")
df3 <- merge(df2,df1[c(1,23)],by.x="V1",by.y="Feature")
df4 <- data.frame(table(df3[c(2,3)]))
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,tmp[tmp$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unclassified",c(1,3)],by="V2")
row.names(df5) <- df5$V2
df5 <- df5[c(2:5)]
colnames(df5) <- c("gbM","TE-like","Unmethylated","Unclassified")
head(df5)
df4 <- data.frame(table(df3[c(2,3)]))
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,tmp[tmp$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Unclassified",c(1,3)],by="V2")
df5 <- merge(df5,tmp[tmp$Classification=="Missing",c(1,3)],by="V2")
row.names(df5) <- df5$V2
df5 <- df5[c(2:5)]
colnames(df5) <- c("gbM","TE-like","Unmethylated","Unclassified","Missing")
df4 <- data.frame(table(df3[c(2,3)]))
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,df4[df4$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unclassified",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Missing",c(1,3)],by="V2")
row.names(df5) <- df5$V2
df5 <- df5[c(2:5)]
colnames(df5) <- c("gbM","TE-like","Unmethylated","Unclassified","Missing")
df5
head(df5)
df5 <- merge(df5,df4[df4$Classification=="Missing",c(1,3)],by="V2")
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,df4[df4$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unclassified",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Missing",c(1,3)],by="V2")
head(df5)
row.names(df5) <- df5$V2
head(df5)
df5 <- df5[c(2:6)]
colnames(df5) <- c("gbM","TE-like","Unmethylated","Unclassified","Missing")
df5$Total <- rowSums(df5)
df5
library(ggplot2)
library(reshape2)
library(scales)
df6 <- melt(df5)
head(df6)
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,df4[df4$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unclassified",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Missing",c(1,3)],by="V2")
colnames(df5) <- c("gbM","TE-like","Unmethylated","Unclassified","Missing")
df5$Total <- rowSums(df5[c(2:6)])
head(df5)
df6 <- melt(df5)
df6
head(df5)
df4 <- data.frame(table(df3[c(2,3)]))
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,df4[df4$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unclassified",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Missing",c(1,3)],by="V2")
colnames(df5) <- c("Orthogroup","gbM","TE-like","Unmethylated","Unclassified","Missing")
df5$Total <- rowSums(df5[c(2:6)])
df6 <- melt(df5)
ggplot(df6) + geom_density(aes(x=value,color=variable))
histogram
ggplot(df6) + geom_bar(aes(x=value,color=variable))
ggplot(df6) + geom_bar(aes(x=value,color=variable)) + scale_x_continuous(limits=c(0,20))
ggplot(df6) + geom_density(aes(x=value,color=variable)) + scale_x_continuous(limits=c(0,20))
ggplot(df6) + geom_density(aes(x=value,color=variable)) + scale_x_continuous(limits=c(0,10))
ggplot(df6) + geom_density(aes(x=value,color=variable)) + scale_x_continuous(limits=c(0,5))
ggplot(df6[df6$variable=="TE-like",]) + geom_density(aes(x=value,color=variable)) + scale_x_continuous(limits=c(0,5))
ggplot(df6[df6$variable=="gbM",]) + geom_density(aes(x=value,color=variable)) + scale_x_continuous(limits=c(0,5))
ggplot(df6[df6$variable=="TE-like",]) + geom_density(aes(x=value,color=variable)) + scale_x_continuous(limits=c(0,5))
ggplot(df6[df6$variable=="gbM",]) + geom_density(aes(x=value,color=variable)) + scale_x_continuous(limits=c(0,5))
ggplot(df6[df6$variable=="Unmethylated",]) + geom_density(aes(x=value,color=variable)) + scale_x_continuous(limits=c(0,5))
