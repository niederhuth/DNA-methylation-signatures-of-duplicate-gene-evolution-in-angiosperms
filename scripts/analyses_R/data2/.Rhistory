n13=nrow(tmp7[tmp7$`0`> 0 & tmp7$`-1`> 0,]),
n123=nrow(tmp7[tmp7$`-1`> 0 & tmp7$`1`> 0 & tmp7$`0`> 0,]),
category = c("Lower Expression", "Higher Expression", "No Difference"),
lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid")
)
head(tmp3)
head(tmp4)
head(tmp5)
row.names(tmp5[tmp5$sum != tmp5$LF & tmp5$sum != tmp5$MF1 & tmp5$sum != tmp5$MF2,])
head(tmp6)
tmp6
head(tmp6)
tmp5
tmp5$LF
tmp5$LF
head(tmp5)
tmp5 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$subgenome))
head(tmp5)
table(tmp5)
colSums(tmp5)
tmp7 <- as.data.frame.matrix(table(tmp4$At_gene,tmp4$direction))
tmp7 <- tmp7[row.names(tmp5) %in% as.vector(unique(tmp$At_gene)),]
#tmp5 <- tmp5[row.names(tmp5) %in% tmp2,]
tmp7$sum <- rowSums(tmp7)
head(tmp7)
head tmp5
head(tmp5)
nrow(tmp5[tmp5$LF>0 & tmp5$MF1>0 & tmp5$MF2>0,])
tmp7[row.names(tmp7) %in% row.names(tmp5[tmp5$LF>0 & tmp5$MF1>0 & tmp5$MF2>0,]),]
tmp8 <- tmp7[row.names(tmp7) %in% row.names(tmp5[tmp5$LF>0 & tmp5$MF1>0 & tmp5$MF2>0,]),]
table(tmp8[1:3])
ls
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`<1 & tmp8$`1`>1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`<1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`>1 & tmp8$`1`>1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`<1 & tmp8$`1`<1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`>1 & tmp8$`1`<1,])
Bidirectional
nrow(Bidirectional)
nrow(tmp8[tmp8$`-1`>1 & tmp8$`0`>1 & tmp8$`1`>1,])
nrow(tmp8[tmp8$`-1`>0 & tmp8$`0`>0 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>0 & tmp8$`0`<1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>0 & tmp8$`0`>1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>1 & tmp8$`0`>1 & tmp8$`1`>0,])
nrow(tmp8[tmp8$`-1`>1 & tmp8$`0`>1 & tmp8$`1`<1,])
nrow(tmp8[tmp8$`-1`<1 & tmp8$`0`>0 & tmp8$`1`>0,])
tmp8[tmp8$`-1`<1 & tmp8$`0`>0 & tmp8$`1`>0,]
library(scales)
library(flextable)
p.adjust(method="BH")
FEsubDEG <- data.frame(
row.names=c("KvT","KvC","CvT"),
LF_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$p.value),
LF_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$estimate),
MF1_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$p.value),
MF1_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$estimate),
MF2_pvalue=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$p.value),
MF2_OR=c(
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$estimate)
)
FEsubDEG
FEsubDEG <- data.frame(
row.names=c("Kale vs TO1000 LF","Kale vs TO1000 MF1","Kale vs TO1000 MF2",
"Kale vs Cabbage LF","Kale vs Cabbage MF1","Kale vs Cabbage MF2",
"Cabbage vs TO1000 LF","Cabbage vs TO1000 MF1","Cabbage vs TO1000 MF2"),
pvalue=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$p.value),
OR=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$estimate)
)
FEsubDEG
FEsubDEG$p.adjust <- p.adjust(FEsubDEG$pvalue,method="BH")
FEsubDEG
FEsubDEG <- data.frame(
row.names=c("Kale vs TO1000 LF","Kale vs TO1000 MF1","Kale vs TO1000 MF2",
"Kale vs Cabbage LF","Kale vs Cabbage MF1","Kale vs Cabbage MF2",
"Cabbage vs TO1000 LF","Cabbage vs TO1000 MF1","Cabbage vs TO1000 MF2"),
OR=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$estimate,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$estimate),
pvalue=c(fisher.test(as.matrix(test2[c(2:3),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(1,2)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(3,4)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(2:3),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(4:5),c(5,6)]),alternative="two.sided")$p.value,
fisher.test(as.matrix(test2[c(6:7),c(5,6)]),alternative="two.sided")$p.value)
)
FEsubDEG$p.adjust <- p.adjust(FEsubDEG$pvalue,method="BH")
FEsubDEG
FEsubDEG
save.image("~/Analysis/Boleracea-rnaseq/figures_tables/Analysis.RData")
ls()
library(V.PhyloMaker)
detach(V.PhyloMaker)
detach(package="V.PhyloMaker")
detach(name="V.PhyloMaker")
detach(name=V.PhyloMaker)
detach("package:V.PhyloMaker", unload = TRUE)
detach("package:ape", unload = TRUE)
load("~/Analysis/Boleracea-rnaseq/figures_tables/Analysis.RData")
library(ggplot2)
nrow(Kshared)
setwd("projects/DNA-methylation-signatures-of-duplicate-gene-evolution-in-angiosperms/scripts/analyses_R/data2/")
source("../orthogroups.R")
BiocManager::install("tidytree")
library("tidytree")
x as_tibble(tre)
x <- as_tibble(tre)
x
print(x)
tre
tre$edge
x[x$node==60,]
x
x[x$node==59,]
plot(x)
plot(tre)
library(ggtree)
ggtree(tre) + geom_nodelab()
x[x$node==59,]
x[x$node==60,]
x[x$label=="N0",]
x
parent(x,1)
parent(x,2)
x[x$label=="Athaliana"]
x[x$label=="Athaliana",]
x[x$label=="Athaliana",]$node
parent(x,x[x$label=="Athaliana",]$node)
sibling(x,x[x$label=="Athaliana",]$node)
child(x,26)
child(x,2)
child(x,86)
sibling(x,x[x$label==86,]$node)
sibling(x,x[x$label==N86,]$node)
sibling(x,x[x$label==N53,]$node)
sibling(x,x[x$label=="N53",]$node)
sibling(x,x[x$label==85,]$node)
sibling(x,85)
child(x,85)
child(x,82)
child(x,1)
child(x,2)
child(x,3)
child(x,4)
child(x,5)
child(x,5)
child(x,6)
child(x,7)
child(x,7)
child(x,87
child(x,8)
child(x,8)
child(x,9)
child(x,10)
child(x,11)
child(x,12)
child(x,13)
child(x,14)
child(x,15)
child(x,16)
child(x,17)
child(x,18)
child(x,19)
child(x,20)
child(x,59)
nrow(x)
for(i in c(58:nrow(x))){print(i)}
child(x,59)
child(x,1)
child(x,1)$node
child(x,59)$node
plot(tre)
rep("Poaceae",9)
head(families)
families <- data.frame(Family=c(rep("Poaceae",9),rep("Brassicaceae",6),rep("Fabaceae",7),
rep("Rosaceae",7),rep("Solanaceae",6),rep("Cucurbitaceae",3)),
Species=c("Bdistachyon","Osativa","Phallii","Pvirgatum","Sbicolor","Sitalica","Svirgatum",
"Zmays","Othomaeum","Alyrata","Athaliana","Brapa","Boleracea","Crubella","Esalsugineum",
"Aduranensis","Aipaensis","Gmax","Gsoja","Ljaponicus","Mtruncatula","Pvulgaris","Fvesca",
"Fxananassa","Mdomestica","Ppersica","Pxbretschneideri","Rchinensis","Roccidentalis",
"Cannuum","Nattenuata","Paxillaris","Slycopersicum","Smelongena","Stuberosum","Clanatus",
"Cmelo","Csativus"))
head(families)
head(PA)
families[families$Family=="Poaceae",]
PA[ncols(PA) %in% families[families$Family=="Poaceae",]$Species,]
PA[colnames(PA) %in% families[families$Family=="Poaceae",]$Species,]
PA[,colnames(PA) %in% families[families$Family=="Poaceae",]$Species]
PA[,!(colnames(PA) %in% families[families$Family=="Poaceae",]$Species)]
rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Poaceae",]$Species)])==0
PA[rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Poaceae",]$Species)])==0,]
PA[rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Poaceae",]$Species)])<0,]
PA[rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Poaceae",]$Species)]),]
rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Poaceae",]$Species)])
rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Poaceae",]$Species)])<1
table(rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Poaceae",]$Species)])<1)
table(rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Brassicacea",]$Species)])<1)
rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Brassicacea",]$Species)])
tail(rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Brassicacea",]$Species)]))
rowSums(PA[,!(colnames(PA) %in% families[families$Family=="Brassicacea",]$Species)])
PA[,!(colnames(PA) %in% families[families$Family=="Brassicacea",]$Species)]
PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))]
PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))] <1
PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))]==0
table(rowSums(PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))]==0))
table(rowSums(PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))]))
rowSums(PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))])
rowSums(PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))]) < 0
rowSums(PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))]) < 1
table(rowSums(PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))]) < 1)
PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))])
PA[,!(colnames(PA) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))]
PA[,!(colnames(PA[1:58]) %in% c(families[families$Family=="Brassicacea",]$Species,"Total"))]
c(families[families$Family=="Brassicacea",]$Species,"Total")
families[families$Family=="Brassicacea",]$Species
families[families$Family=="Brassicacea",]$Species
PA[,!(colnames(PA) %in% families[families$Family=="Brassicacea",]$Species)]
PA[,!(colnames(PA) %in% families[families$Family=="Poaceae",]$Species)]
PA[,!(colnames(PA) %in% c(families[families$Family=="Poaceae",]$Species,"Total"))]
c(families[families$Family=="Poaceae",]$Species,"Total")
PA[,!(colnames(PA) %in% c(as.character(families[families$Family=="Poaceae",]$Species),"Total"))]
table(rowSums(PA[,!(colnames(PA) %in% c(as.character(families[families$Family=="Poaceae",]$Species),"Total"))]) < 1)
rowSums(PA[,!(colnames(PA) %in% c(as.character(families[families$Family=="Poaceae",]$Species),"Total"))]) < 1
PA[rowSums(PA[,!(colnames(PA) %in% c(as.character(families[families$Family=="Poaceae",]$Species),"Total"))]) < 1,]
PA[rowSums(PA[,!(colnames(PA) %in% c(as.character(families[families$Family=="Poaceae",]$Species),"Total"))]) < 1 & row.names(PA) %in% row.names(speciesSpecific),]
PA[rowSums(PA[,!(colnames(PA) %in% c(as.character(families[families$Family=="Poaceae",]$Species),"Total"))]) < 1 & PA$Total >= 2,]
lineageSpecific <- geneCounts[row.names(geneCounts) %in% row.names(PA[rowSums(PA[,!(colnames(PA)
%in% c(as.character(families[families$Family=="Poaceae",]$Species),"Total"))]) < 1 &
PA$Total >= 2,])
lineageSpecific <- geneCounts[row.names(geneCounts) %in% row.names(PA[rowSums(PA[,!(colnames(PA)
%in% c(as.character(families[families$Family=="Poaceae",]$Species),"Total"))]) < 1 &
PA$Total >= 2,]),]
lineageSpecific
head(df7)
nrow(df7)
geneCounts[row.names(geneCounts) %in%
row.names(PA[rowSums(PA[,!(colnames(PA) %in%
c(as.character(families[families$Family=="Poaceae",]$Species),"Total"))]) < 1 &
PA$Total >= 2,]),]
df5
head(df5)
multiCopy <- geneCounts[!(row.names(geneCounts) %in% row.names(singleCopy)),]
lineageSpecific <- data.frame()
for(i in unique(families$Family)){
lineageSpecific <- rbind(lineageSpecific,geneCounts[row.names(geneCounts) %in%
row.names(PA[rowSums(PA[,!(colnames(PA) %in% c(as.character(families[
families$Family=="Poaceae",]$Species),"Total"))]) < 1 & PA$Total >= 2,]),])
}
tmp <- row.names(coreGenes) + row.names(speciesSpecific) + row.names(lineageSpecific)
c(row.names(coreGenes),row.names(speciesSpecific),row.names(lineageSpecific))
otherOG <- geneCounts[!(row.names(geneCounts %in% c(row.names(coreGenes),
row.names(speciesSpecific),row.names(lineageSpecific)))),
otherOG <- geneCounts[!(row.names(geneCounts %in% c(row.names(coreGenes),
row.names(speciesSpecific),row.names(lineageSpecific)))),]
otherOG <- geneCounts[!(row.names(geneCounts) %in% c(row.names(coreGenes),
row.names(speciesSpecific),row.names(lineageSpecific))),]
ogCat <- rbind(data.frame(Orthogroup=row.names(singleCopy),ogCat=c("Single Copy Core")),
data.frame(Orthogroup=row.names(multiCopy),ogCat=c("Multi-Copy Core")),
data.frame(Orthogroup=row.names(lineageSpecific),ogCat=c("Family Specific")),
data.frame(Orthogroup=row.names(speciesSpecific),ogCat=c("Specie Specific")),
data.frame(Orthogroup=row.names(otherOG),ogCat=c("Other")))
ogCat
head(df6)
df7 <- merge(ogCat,df6,by="Orthogroup")
df7
df7 <- merge(ogCat,df6,by="Orthogroup")
df7$Species <- a
df7
df7$pOG <- df7$pmC <- NA
for(x,y in df7$ogCat,df7$variable){
df7[df7$ogCat==x & df7$variable==y,]$pmC <- df7[df7$ogCat==x & df7$variable==y,]/
sum(df7[df7$variable==y,]$value)
df7[df7$ogCat==x & df7$variable==y,]$pOG <- df7[df7$ogCat==x & df7$variable==y,]/
sum(df7[df7$ogCat==x,]$value)
}
head(df7)
for(x,y in df7$ogCat,df7$variable){
df7[df7$ogCat==x & df7$variable==y,]$pmC <- df7[df7$ogCat==x & df7$variable==y,]$value/
sum(df7[df7$variable==y,]$value)
df7[df7$ogCat==x & df7$variable==y,]$pOG <- df7[df7$ogCat==x & df7$variable==y,]$value/
sum(df7[df7$ogCat==x,]$value)
}
for(x,y in df7$ogCat,df7$variable){print(x,y)}
for(x,y in df7$ogCat,df7$variable){print(x),print(y)}
for(x,y in df7$ogCat,df7$variable){print(x)
print(y)}
for(x in df7$ogCat){
for(y in df7$variable){
df7[df7$ogCat==x & df7$variable==y,]$pmC <-
df7[df7$ogCat==x & df7$variable==y,]$value/sum(df7[df7$variable==y,]$value)
df7[df7$ogCat==x & df7$variable==y,]$pOG <-
df7[df7$ogCat==x & df7$variable==y,]$value/sum(df7[df7$ogCat==x,]$value)
}
}
df7 <- merge(ogCat,df6,by="Orthogroup")
df7$Species <- a
df7$pOG <- df7$pmC <- NA
for(x in unique(df7$ogCat)){
for(y in unique(df7$variable)){
df7[df7$ogCat==x & df7$variable==y,]$pmC <-
df7[df7$ogCat==x & df7$variable==y,]$value/sum(df7[df7$variable==y,]$value)
df7[df7$ogCat==x & df7$variable==y,]$pOG <-
df7[df7$ogCat==x & df7$variable==y,]$value/sum(df7[df7$ogCat==x,]$value)
}
}
head(df7)
ggplot(df7) + geom_bar(aes(x=variable,y=pmC,fill=ogCat))
ggplot(df7) + geom_bar(aes(x=variable,y=pmC,fill=ogCat),stat="identity")
ggplot(df7) + geom_bar(aes(fill=variable,y=pOG,x=ogCat),stat="identity")
df7[df7$variable=="Total"]
df7[df7$variable=="Total",]
ggplot(df7[df7$variable != "Total",]) + geom_bar(aes(fill=variable,y=pOG,x=ogCat),stat="identity")
df7 <- merge(ogCat,df6,by="Orthogroup")
df7$Species <- a
df7$pOG <- df7$pmC <- NA
for(x in unique(df7$ogCat)){
for(y in unique(df7$variable)){
df7[df7$ogCat==x & df7$variable==y,]$pmC <-
df7[df7$ogCat==x & df7$variable==y,]$value/sum(df7[df7$variable==y,]$value)
df7[df7$ogCat==x & df7$variable==y,]$pOG <-
df7[df7$ogCat==x & df7$variable==y &df7$variable !=,]$value/
sum(df7[df7$ogCat==x & df7$variable != "Total",]$value)
}
}
for(x in unique(df7$ogCat)){
for(y in unique(df7$variable)){
df7[df7$ogCat==x & df7$variable==y,]$pmC <-
df7[df7$ogCat==x & df7$variable==y,]$value/sum(df7[df7$variable==y,]$value)
df7[df7$ogCat==x & df7$variable==y,]$pOG <-
df7[df7$ogCat==x & df7$variable==y &df7$variable !=,]$value/
sum(df7[df7$ogCat==x & df7$variable != "Total",]$value)
}
}
df7$pOG <- df7$pmC <- NA
for(x in unique(df7$ogCat)){
for(y in unique(df7$variable)){
df7[df7$ogCat==x & df7$variable==y,]$pmC <-
df7[df7$ogCat==x & df7$variable==y,]$value/sum(df7[df7$variable==y,]$value)
df7[df7$ogCat==x & df7$variable==y,]$pOG <-
df7[df7$ogCat==x & df7$variable==y,]$value/
sum(df7[df7$ogCat==x & df7$variable != "Total",]$value)
}
}
ggplot(df7[df7$variable != "Total",]) + geom_bar(aes(fill=variable,y=pOG,x=ogCat),stat="identity")
rm(list=ls())
source("../orthogroups.R")
ggplot(pOG[pOG$variable="TE.like",]) + geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity")
ggplot(pOG[pOG$variable=="TE.like",]) + geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity")
ggplot(pOG[pOG$variable=="TE.like",]) + geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=0.5)) + scale_y_continuous("Percentage of Genes",expand=c(0.0)) + scale_fill_manual("Orthogroups")
ggplot(pOG[pOG$variable=="TE.like",]) + geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=0.5)) + scale_y_continuous("Percentage of Genes",expand=c(0,0)) + scale_fill_manual("Orthogroups")
ggplot(pOG[pOG$variable=="TE.like",]) + geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=0.5)) + scale_y_continuous("Percentage of Genes",expand=c(0,0))
ggplot(pOG[pOG$variable==a,]) +
geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") +
theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=0)) +
scale_y_continuous("Percentage of Genes",expand=c(0,0))
a="TE.like"
ggplot(pOG[pOG$variable==a,]) +
geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") +
theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=0)) +
scale_y_continuous("Percentage of Genes",expand=c(0,0))
ggplot(pOG[pOG$variable==a,]) +
geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") +
theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=1)) +
scale_y_continuous("Percentage of Genes",expand=c(0,0))
ggplot(pOG[pOG$variable==a,]) +
geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") +
theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=0)) +
scale_y_continuous("Percentage of Genes",expand=c(0,0))
ogCat <- rbind(data.frame(Orthogroup=row.names(singleCopy),ogCat=c("Single-Copy Core")),
data.frame(Orthogroup=row.names(multiCopy),ogCat=c("Other Core")),
data.frame(Orthogroup=row.names(lineageSpecific),ogCat=c("Family Specific")),
data.frame(Orthogroup=row.names(speciesSpecific),ogCat=c("Species/Lineage Specific")),
data.frame(Orthogroup=row.names(otherOG),ogCat=c("Multi-Species")))
top <- pOG <- data.frame()
#Iterate over each species
for(a in species){
#Read in the list of genes classified by methylation status
df1 <- read.table(paste(a,"/methylpy/results/",a,"_classified_genes.tsv",sep=""),
sep="\t",header=TRUE)
#Set classification to character, so that R doesn't screw it up
df1$Classification <- as.character(df1$Classification)
#Change "NA" to "Missing"
df1$Classification <- ifelse(is.na(df1$Classification),"Missing",df1$Classification)
#Read in the orthogroups for that species
df2 <- read.table(paste(a,"/ref/mcscanx/",a,"_orthogroups.tsv",sep=""),header=FALSE,sep="\t")
#Merge DNA methylation classification & orthogroups
df3 <- merge(df2,df1[c(1,23)],by.x="V1",by.y="Feature")
#Table the values so that we can get the count of each classification for each orthogroup
df4 <- data.frame(table(df3[c(2,3)]))
#Build a new table with each column being the DNA methylation classification
#and each row an orthogroup
df5 <- df4[df4$Classification=="gbM",c(1,3)]
df5 <- merge(df5,df4[df4$Classification=="TE-like",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unmethylated",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Unclassified",c(1,3)],by="V2")
df5 <- merge(df5,df4[df4$Classification=="Missing",c(1,3)],by="V2")
#Rename columns
colnames(df5) <- c("Orthogroup","gbM","TE.like","Unmethylated","Unclassified","Missing")
#Sum up each row
df5$Total <- rowSums(df5[c(2:6)])
#Reformat for easier plotting
df6 <- melt(df5)
#Populate the pSC dataframe for analysis
tmp <- data.frame(t(colSums(df5[df5$Orthogroup %in% row.names(singleCopy),c(2:7)])))
for(b in c('gbM','TE.like','Unmethylated','Unclassified','Missing','Total')){
pSC[pSC$Species==a,b] <- tmp[b]
if(b != 'Total'){
pSC[pSC$Species==a,paste("p",b,sep="")] <- tmp[b]/tmp['Total']
pSC[pSC$Species==a,paste("O",b,sep="")] <-
nrow(df5[df5$Orthogroup %in% row.names(singleCopy) & df5[b] > 0,])
pSC[pSC$Species==a,paste("Op",b,sep="")] <-
nrow(df5[df5$Orthogroup %in% row.names(singleCopy) & df5[b] > 0,])/
nrow(singleCopy)
#Make a dataframe of the top 5 orthogroups with the most of each
#methylation classification
top <- rbind(top,data.frame(Species=a,Classification=b,
Orthogroup=df5[df5[[b]] %in% sort(df5[[b]],decreasing=T)[1:5],"Orthogroup"],
Count=df5[df5[[b]] %in% sort(df5[[b]],decreasing=T)[1:5],b]))
}
}
rm(tmp)
#Create a dataframe counting genes by methylation class and different categories of
#orthogroups
df7 <- merge(ogCat,df6,by="Orthogroup")
df7$Species <- a
df7$pOG <- df7$pmC <- NA
for(x in unique(df7$ogCat)){
for(y in unique(df7$variable)){
df7[df7$ogCat==x & df7$variable==y,]$pmC <-
df7[df7$ogCat==x & df7$variable==y,]$value/sum(df7[df7$variable==y,]$value)
df7[df7$ogCat==x & df7$variable==y,]$pOG <-
df7[df7$ogCat==x & df7$variable==y,]$value/
sum(df7[df7$ogCat==x & df7$variable != "Total",]$value)
}
}
pOG <- rbind(pOG,df7)
}
ggplot(pOG[pOG$variable==a,]) +
geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") +
theme_bw() + theme(axis.text.x=element_text(angle=90,vjust=0.5)) +
scale_y_continuous("Percentage of Genes",expand=c(0,0))
a="TE.like"
ggplot(pOG[pOG$variable==a,]) +
geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") +
theme_bw() + theme(axis.text.x=element_text(angle=90,vjust=0.5)) +
scale_y_continuous("Percentage of Genes",expand=c(0,0))
ggplot(pOG[pOG$variable==a,]) +
geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") +
theme_bw() + theme(axis.text.x=element_text(angle=90,vjust=0.5),hjust=0) +
scale_y_continuous("Percentage of Genes",expand=c(0,0))
ggplot(pOG[pOG$variable==a,]) +
geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") +
theme_bw() + theme(axis.text.x=element_text(angle=90,vjust=0.5,hjust=0)) +
scale_y_continuous("Percentage of Genes",expand=c(0,0))
ggplot(pOG[pOG$variable==a,]) +
geom_bar(aes(x=Species,y=pmC,fill=ogCat),stat="identity") +
theme_bw() + theme(axis.text.x=element_text(angle=90,vjust=0.5,hjust=1)) +
scale_y_continuous("Percentage of Genes",expand=c(0,0))
source("../orthogroups.R")
c(35,34,20,19,1,5,23,22,40,14,17,26,27,18,28,13,2,21,32,33,37,
16,38,3,31,24,43,39,4,11,29,25,10,5,30,36,7,8,41,42,9,15,12,6)
length(c(35,34,20,19,1,5,23,22,40,14,17,26,27,18,28,13,2,21,32,33,37,
16,38,3,31,24,43,39,4,11,29,25,10,5,30,36,7,8,41,42,9,15,12,6))
source("../orthogroups.R")
p
source("../orthogroups.R")
source("../orthogroups.R")
source("../orthogroups.R")
source("../orthogroups.R")
head(coreGenes)
