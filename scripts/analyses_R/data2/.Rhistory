setwd("projects/DNA-methylation-signatures-of-duplicate-gene-evolution-in-angiosperms/scripts/analyses_R/data2/")
source("../orthogroups.R")
ls()
head(df7)
head(df5)
df5[max(df5$gbM)]
df5[max(df5$gbM),]
max(df5$gbM)
df5[df5$gbM == max(df5$gbM),]
df5[df5$TE.like == max(df5$TE.like),]
sort(df5$gbM,decreasing=T)
sort(df5$gbM,decreasing=T)[10]
sort(df5$gbM,decreasing=T)[1:10]
source("../orthogroups.R")
df5[df5[b] %in% sort(df5[b],decreasing=T)[1:5],"Orthogroup"]
df5[df5[b] %in% sort(df5[b],decreasing=T)[1:5],1]
df5[df5[b] %in% sort(df5[b],decreasing=T)[1:5],]
b
df5[df5[b,] %in% sort(df5[b,],decreasing=T)[1:5],]
sort(df5[b],decreasing=T)[1:5]
sort(df5[b,],decreasing=T)[1:5]
df5[b]
sort(df5[b],decreasing=T)
sort(df5[b,],decreasing=T)
head(df5[b])
head(vector(df5[b]))
head(velist(df5[b]))
head(list(df5[b]))
sort(list(df5[b]))
sort(atomic(df5[b]))
sort(as.atomic(df5[b]))
sort(as.vector(df5[b]))
sort(as.vector(df5[b,]))
sort(as.list(df5[b,]))
sort(as.array(df5[b,]))
df5[b]
df5[b,]
df5[b]$Unmethylated
df5$gbM
df5[[b]]
Orthogroup=df5[df5[b] %in% sort(df5[[b]],decreasing=T)[1:5],b]
Orthogroup
rm(Orange)
rm(Orthogroup)
df5[df5[b] %in% sort(df5[[b]],decreasing=T)[1:5],b]a
df5[df5[b] %in% sort(df5[[b]],decreasing=T)[1:5],b]
df5[df5[b] %in% sort(df5[[b]],decreasing=T)[1:5],]
sort(df5[[b]],decreasing=T)[1:5]
df5[df5[[b] %in% sort(df5[[b]],decreasing=T)[1:5],]
df5[df5[[b]] %in% sort(df5[[b]],decreasing=T)[1:5],]
source("../orthogroups.R")
source("../orthogroups.R")
source("../orthogroups.R")
source("../orthogroups.R")
top
top[top$Classification=="TE.like",]
top[top$Classification=="TE.like",]$Orthogroup %in% row.names(coreGenes)
table(top[top$Classification=="TE.like",]$Orthogroup %in% row.names(coreGenes))
top[top[top$Classification=="TE.like",]$Orthogroup %in% row.names(coreGenes),]
top[top[top$Classification=="TE.like",]$Orthogroup %in% row.names(coreGenes),]$Orthogroup
unique(top[top[top$Classification=="TE.like",]$Orthogroup %in% row.names(coreGenes),]$Orthogroup)
top[top[top$Classification=="TE.like",]$Orthogroup %in% row.names(coreGenes),]
top[top$Classification=="TE.like",]$Orthogroup %in% row.names(coreGenes)
top[top$Classification=="TE.like",]
top[top$Classification=="TE.like",]$Orthogroup %in% row.names(coreGenes)
top[top$Classification=="TE.like" & top$Orthogroup %in% row.names(coreGenes),]
top[top$Classification=="TE.like" & top$Orthogroup %in% row.names(coreGenes),]$Orthogroups
top[top$Classification=="TE.like" & top$Orthogroup %in% row.names(coreGenes),]$Orthogroup
library(ggtree)
ggtree(tre)
ggtree(tre) + geom_nodelab()
ggtree(tre) + geom_nodelab() + geom_tiplab()
tre
treePop()
tre$edge
tre$Nnode
tre$node.label
source("../orthogroups.R")
PA[PA$Total==1,]
speciesSpecific <- geneCounts[row.names(geneCounts) %in% row.names(PA[PA$Total==1,]),]
nrow(speciesSpecific)
head(speciesSpecific)
ggplot(speciesSpecific) + geom_histogram(aes(x=Total))
ggplot(speciesSpecific) + geom_histogram(aes(x=Total),bins=100)
ggplot(speciesSpecific) + geom_histogram(aes(x=Total),bins=600)
nrow(speciesSpecific[speciesSpecific$Total > 10,])
mean(speciesSpecific$Total)
median(speciesSpecific$Total)
nrow(speciesSpecific[speciesSpecific$Total > 20,])
max(coreGenes[1:58])
coreGenes[1:58]
as.matrix(coreGenes[1:58])
max(as.matrix(coreGenes[1:58]))
coreGenes
head(singleCopy)
coreGenes
coreGenes <- df1[row.names(df1) %in% row.names(PA[PA$Total >= 51,]),]
coreGenes
df1[row.names(df1) %in% row.names(PA[PA$Total >= 51,]),]
df1
df1 <- PA <- subset(geneCounts,select = -Total )
#If a species is missing an orthogroup label it as a 0, if the orthogroup is present
#label it as a 1, regardless of how many genes are in that orthogroup
for(i in colnames(PA)){
PA[i] <- ifelse(geneCounts[i]==0,0,1)
}
#Sum up the row to get how many species have or are missing an orthogroup
PA$Total <- rowSums(PA)
#If an orthogroup is single-copy in a species, label it as a 1, otherwise label it a 0.
for(i in colnames(df1)){
df1[i] <- ifelse(geneCounts[i]==1,1,0)
}
#Get the percentage of species where an orthogroup is single-copy
df1$Total <- rowSums(df1)/ncol(df1)
#Plot out the distribution of species per orthogroup. We will use this to decide what the
#the minimal number of species at which we classify an orthogroup as being part of the core
#angiosperm gene set. This is similar to what was done in Li et al. 2016
p <- ggplot(PA) +
geom_histogram(aes(x=Total,fill=cut(Total,c(50,58))),bins=58) +
theme_bw() + theme(legend.position="none") +
scale_y_continuous("Number of Orthogroups",expand=c(0,0)) +
scale_x_continuous("Number of Species in Orthogroup",expand=c(0,0))
#Make a dataframe of "core" angiosperm genes
coreGenes <- df1[row.names(df1) %in% row.names(PA[PA$Total >= 51,]),]
coreGenes
head(df1)
nrow(df1)
nrow(geneCounts)
nrow(singleCopy)
row.names(PA[PA$Total >= 51,])
nrow(PA)
df1[row.names(df1) %in% row.names(PA[PA$Total >= 51,]),]
df1
top
speciesSpecific
coreGenes <- geneCounts[row.names(dgeneCounts) %in% row.names(PA[PA$Total >= 51,]),]
coreGenes <- geneCounts[row.names(geneCounts) %in% row.names(PA[PA$Total >= 51,]),]
head(coreGenes)
max(coreGenes[1:58])
mean(coreGenes[1:58])
mean(as.matrix(coreGenes[1:58]))
median(as.matrix(coreGenes[1:58]))
nrow(speciesSpecific[speciesSpecific$Total > 20,])
highCopySS <- speciesSpecific[speciesSpecific$Total > 20,]
tail highCopySS
median(highCopySS)
median(highCopySS$Total)
mean(highCopySS$Total)
highCopySS[highCopySS$Athaliana != 0,]
highCopySS <- speciesSpecific[speciesSpecific$Total > 10,]
highCopySS[highCopySS$Athaliana != 0,]
highCopySS[highCopySS$Athaliana > 0,]
highCopySS <- speciesSpecific[speciesSpecific$Total > 5,]
highCopySS[highCopySS$Athaliana > 0,]
highCopySS <- speciesSpecific[speciesSpecific$Total > 20,]
head(highCopySS)
top$Orthogroup %in% highCopySS
table(top$Orthogroup %in% highCopySS)
highCopySS <- speciesSpecific[speciesSpecific$Total > 10,]
table(top$Orthogroup %in% highCopySS)
table(top$Orthogroup %in% row.names(highCopySS))
highCopySS <- speciesSpecific[speciesSpecific$Total > 20,]
table(top$Orthogroup %in% row.names(highCopySS))
top[top$Orthogroup %in% row.names(highCopySS),]
table(top[top$Orthogroup %in% row.names(highCopySS),]$Classification)
highCopySS[row.names(highCopySS)=="OG0001722",]
top[top$Classification=="TE.like",]
top[top$Classification=="TE.like",]$Orthogroup %in% row.names(geneCounts[geneCounts$Athaliana > 0,])
table)top[top$Classification=="TE.like",]$Orthogroup %in% row.names(geneCounts[geneCounts$Athaliana > 0,]))
table(top[top$Classification=="TE.like",]$Orthogroup %in% row.names(geneCounts[geneCounts$Athaliana > 0,]))
write.csv(top,"top_orthogroups.csv",header=TRUE,quote=FALSE)
write.csv(top,"top_orthogroups.csv",quote=FALSE)
write.csv(top,"top_orthogroups.csv",quote=FALSE,row.names=FALSE)
